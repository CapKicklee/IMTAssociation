/*
 * Created on 1 nov. 2017 ( Time 17:24:25 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package org.demo.bean.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "ADRESSE"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="ADRESSE", schema="APP" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="AdresseEntity.countAll", query="SELECT COUNT(x) FROM AdresseEntity x" )
} )
public class AdresseEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @Column(name="ID", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="RUE", length=50)
    private String     rue          ;

    @Column(name="CP")
    private Integer    cp           ;

    @Column(name="VILLE", length=30)
    private String     ville        ;

	// "pays" (column "PAYS") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToOne
    @JoinColumn(name="PAYS", referencedColumnName="CODE")
    private PaysEntity pays2       ;

    @OneToMany(mappedBy="adresse2", targetEntity=AdherentEntity.class)
    private List<AdherentEntity> listOfAdherent;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public AdresseEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : RUE ( VARCHAR ) 
    public void setRue( String rue ) {
        this.rue = rue;
    }
    public String getRue() {
        return this.rue;
    }

    //--- DATABASE MAPPING : CP ( INTEGER ) 
    public void setCp( Integer cp ) {
        this.cp = cp;
    }
    public Integer getCp() {
        return this.cp;
    }

    //--- DATABASE MAPPING : VILLE ( VARCHAR ) 
    public void setVille( String ville ) {
        this.ville = ville;
    }
    public String getVille() {
        return this.ville;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setPays2( PaysEntity pays2 ) {
        this.pays2 = pays2;
    }
    public PaysEntity getPays2() {
        return this.pays2;
    }

    public void setListOfAdherent( List<AdherentEntity> listOfAdherent ) {
        this.listOfAdherent = listOfAdherent;
    }
    public List<AdherentEntity> getListOfAdherent() {
        return this.listOfAdherent;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(rue);
        sb.append("|");
        sb.append(cp);
        sb.append("|");
        sb.append(ville);
        return sb.toString(); 
    } 

}
